import { parse as doParse } from './parse'
import { analyzeScope } from './scope'
import visitorKeys from './visitor-keys'
import rules from './rules'
import * as configs from './configs'
import { getServices } from './services'

export parseForESLint(code, options) -> {
  now options = options || {};
  options.ecmaVersion = options.ecmaVersion || 2018;
  options.sourceType = options.sourceType || "module";
  options.allowImportExportEverywhere =
    options.allowImportExportEverywhere || false;

  if (options.eslintVisitorKeys && options.eslintScopeManager) {
    { ast, compilerConfig } = doParse(code, options)
    scopeManager = analyzeScope(ast, options, compilerConfig)
    services = getServices(ast, options, scopeManager, compilerConfig)

    { ast, scopeManager, visitorKeys, services }
  } else {
    throw new Error("ESLint is too old; update your version.");
  }
}

parse = parseForESLint

export { rules, configs, parse }
